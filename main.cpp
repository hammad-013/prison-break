#include <iostream>
#include <windows.h>
#include <conio.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>

using namespace std;
void gotoRowCol(int rpos, int cpos)
{
    int xpos = cpos, ypos = rpos;
    COORD scrn;
    HANDLE hOuput = GetStdHandle(STD_OUTPUT_HANDLE);
    scrn.X = cpos;
    scrn.Y = rpos;
    SetConsoleCursorPosition(hOuput, scrn);
}

void printPrison(int row, int col, int ar[][88]){
    for(int i = 0; i < row; i++) {
        for(int j = 0; j < col; j++) {
           // if(arr[i][j]==0)
                cout<<ar[i][j]<<" ";
           // else
           //     cout<<" ";

        }
        cout<<endl;
}}
void playerMovement(int row, int col,int srow, int scol,int erow, int ecol, int toSwap,int arr[][88]){
     while(true){
            int movement =getch();
            if(movement==72){
                toSwap = srow - 1;
                if(arr[toSwap][scol]==0){
                   int temp = arr[toSwap][scol];
                arr[toSwap][scol] = arr[srow][scol];
                arr[srow][scol] = temp;
                srow = srow-1;
               // system("CLS");
               gotoRowCol(0,0);
                printPrison(row,col,arr);
                }

            }
            else if(movement==80){
                toSwap = srow + 1;
                if(arr[toSwap][scol]==0){
                    int temp = arr[toSwap][scol];
                arr[toSwap][scol] = arr[srow][scol];
                arr[srow][scol] = temp;
                srow = srow+1;
                gotoRowCol(0,0);
               // system("CLS");
                printPrison(row,col,arr);
                }

            }
            else if(movement==77){
                 toSwap = scol + 1;
                if(arr[srow][toSwap]==0){
                  int temp = arr[srow][toSwap];
                arr[srow][toSwap] = arr[srow][scol];
                arr[srow][scol] = temp;
                scol = scol+1;
                gotoRowCol(0,0);
                //system("CLS");
                printPrison(row,col,arr);
                }

            }
            else if(movement==75){
                 toSwap = scol - 1;
                if (arr[srow][toSwap]==0){
                   int temp = arr[srow][toSwap];
                arr[srow][toSwap] = arr[srow][scol];
                arr[srow][scol] = temp;
                scol = scol -1;
                gotoRowCol(0,0);
                //system("CLS");
                printPrison(row,col,arr);
                }

            }
            if(srow==erow && scol==ecol){
                system("CLS");
                cout<<"You have escaped the prison.";
                break;
            }

        }

}
int main() {
    int row = 20, col = 88;
    int arr[row][88] = {
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1},
        {1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1},
        {1,1,0,1,0,1,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1},
        {1,1,1,1,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1},
        {1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0},
        {1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1},
        {1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1},
        {1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1},
        {1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1},
        {1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1},
        {1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1},
        {1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1},
        {1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1},
        {1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,0,0,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1},
        {1,1,1,1,0,1,0,1,1,0,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,1},
        {1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1},
        {1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1},
        {1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
    };
    int srow=18, scol=1, erow=5, ecol=87;
    printPrison(row,col,arr);
    int toSwap = 0;

    playerMovement(row,col,srow,scol,erow,ecol,toSwap,arr);


    return 0;
}
